{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"For":{
		"prefix": "forr",
		"body": ["for x in range(5):",
				"\tprint(x)",
				""
	],
	},

	"PySide6 inits": {
		"prefix": "ps6in",
		"body": [
			"def __init__(self):",
        	"\tsuper().__init__()",
			"\t"
		],
		"description": "Constructores (madre e hija)"
	},	
	"PySide6 Base with libs": {
		"prefix": "ps6libs",
		"body": [
			"import os, sys",
			"sys.path.append(os.path.abspath('libs'))",
			"",
			"from PySide6.QtWidgets import (QApplication, QWidget, QMainWindow, QVBoxLayout)",
			"from styles import Text, Input, Button",
			"",
			"class MainWindow(QMainWindow):",
			"\tdef __init__(self):",
			"\t\tsuper().__init__()",
			"",
			"\t\tlayout = QVBoxLayout()",
			"\t\tself.entrada = Input('${2:Input}', fontF='Calibri', fontS=20)",
			"\t\tlayout.addWidget(self.entrada)",
			"\t\tself.texto = Text('${1:Text}', foreg='cyan', backg='#123456', hAlign='aL', border=3, radius=0)",
			"\t\tlayout.addWidget(self.texto)",
			"\t\tboton = Button('${3:Button}', foreg='red', backg='yellow')",
			"\t\tlayout.addWidget(boton)",
			"\t\tboton.setDefault(True)",
			"\t\tboton.clicked.connect(self.${4:functionName})",
			"\t\tcentralWidget = QWidget()",
			"\t\tcentralWidget.setLayout(layout)",
			"\t\tself.setCentralWidget(centralWidget)",
			"",
			"\tdef ${4:functionName}(self):",
			"\t\tself.texto.setText(f'Hola {self.entrada.text()}')",
			"",
			"if __name__ == '__main__':",
			"\tapp = QApplication()",
			"\twindow = MainWindow()",
			"\twindow.show()",
			"\tapp.exec()",
			""
		]
	},

	"PySide6 Base": {
		"prefix": "ps6",
		"body": [
			"from PySide6.QtWidgets import QApplication, QMainWindow, QLabel, QVBoxLayout, QWidget, QLineEdit, QPushButton",
			"from PySide6.QtGui import QFont",
			"from PySide6.QtCore import Qt",
			"",
			"class MainWindow(QMainWindow):",
			"\tdef __init__(self):",
			"\t\tsuper().__init__()",
			"",
			"\t\tlayout = QVBoxLayout()",
			"\t\tself.texto = QLabel('${3:label}')",
			"\t\tlayout.addWidget(self.texto)",
			"\t\tself.entrada = QLineEdit()",
			"\t\tlayout.addWidget(self.entrada)",
			"\t\tboton = QPushButton('${4:label}')",
			"\t\tboton.setDefault(True)",
			"\t\tlayout.addWidget(boton)",
			"\t\tboton.clicked.connect(self.${5:function_name})",
			"\t\tcentralWidget = QWidget()",
			"\t\tcentralWidget.setLayout(layout)",
			"\t\tself.setCentralWidget(centralWidget)",
			"",
			"\tdef ${5:function_name}(self):",
			"\t\tself.texto.setText(f'Hola {self.entrada.text()}')",
			"",
			"if __name__ == '__main__':",
			"\tapp = QApplication()",
			"\tcss = '*{font-size: 20px; background-color: #c6f5c7; color: #850a30;}'",
    		"\tapp.setStyleSheet(css)",
			"\twindow = MainWindow()",
			"\twindow.show()",
			"\tapp.exec()",
			""
		]
	},

	"PySide6": {
		"prefix": "kps",
		"body": [
			"from PySide6.QtWidgets import QApplication, QMainWindow, QLabel, QVBoxLayout, QWidget, QLineEdit, QPushButton",
			"from PySide6.QtGui import QFont",
			"from PySide6.QtCore import Qt",
			"",
			"class MainWindow(QMainWindow):",
			"\tdef __init__(self):",
			"\t\tsuper().__init__()",
			"\t\tdef instance(lay, clase):",
			"\t\t\tv = clase",
			"\t\t\tlay.addWidget(v)",
			"\t\t\treturn v",
			"",
			"\t\tmainLayout = QVBoxLayout()",
			"\t\tself.t = instance(layout, QLabel('${3:label}'))",
			"\t\tself.n = instance(layout, QLineEdit())",
			"\t\tboton = instance(layout, QPushButton('${4:label}'))",
			"\t\tboton.clicked.connect(self.${5:function_name})",
			"\t\tcentralWidget = QWidget()",
			"\t\tcentralWidget.setLayout(mainLayout)",
			"\t\tself.setCentralWidget(centralWidget)",
			"",
			"\tdef ${5:function_name}(self):",
			"\t\tself.t.setText('xxxxxx')",
			"",
			"if __name__ == '__main__':",
			"\tapp = QApplication()",
			"\twindow = MainWindow()",
			"\twindow.show()",
			"\tapp.exec()",
			""
		]
	},


	"menu": {
		"prefix": ".menu",
		"body": [
			"def ${1:fName1}():",
			"\t'''${2:comment}'''",
			"",
			"def ${3:fName2}():",
			"\t'''${4:comment}'''",
			"",
			"menu = {",
			"\t'${5:fLabel1}': ${1:fName1},",
			"\t'${6:fLabel2}': ${3:fName2}",
			"}",
			"",
			"op = inputMenu('${7:Menú de Opciones}', menu)"
		],
		"description": "menú de opciones"
	},	
	
	"PSG": {
		"prefix": "psg",
		"body": [
			"import PySimpleGUI as sg",
			"",
			"layout = [",
			"\t\t\t[sg.Text('${1:label1}')],",
			"\t\t\t[sg.Text('${2:label2}'), sg.Input(key='${3:label3}')],",
			"\t\t\t[sg.Input(key='${4:label4}', enable_events=True)],",
			"\t\t\t[sg.Button('OK'), sg.Button('Exit')]",
			"\t\t\t]",
			"",
			"window = sg.Window('${5:winTitle}', layout, location=(2500, 500)) # return_keyboard_events=True",
			"",
			"while True:",
			"\tevent, values = window.read()",
			"\tif event in [None, 'Exit']:",
			"\t\tbreak",
			"\t$6",
			"",
			"window.close()"
		]
	},
	"constructor": {
		"prefix": "defy",
		"body": [
			"def __init__(self, ${1:param1}):",
			"\t${2:pass}"
		],
		"description": "constructor"
	},
	"def comment": {
		"prefix": "defc",
		"body": [
			"def ${1:fName}($2):",
			"\t'''${3:comment}'''"
		],
		"description": "commented def"
	},
	"input": {
		"prefix": "kin",
		"body": [
			"${1:var} = input('${2:message}')"
		],
		"description": "input"
	},
	"wxp": {
		"prefix": "wxp",
		"body": [
			"from wx import *",
			"",
			"class MyApp(App):",
			"\tdef OnInit(self):",
			"\t\tf = Frame(None, -1, '${1:title}')",
			"\t\tp = Panel(f)",
			"\t\ts = BoxSizer(VERTICAL)",
			"\t\t${2:st1} = StaticText(p, -1, '${3:label}')",
			"\t\t${4:tc1} = TextCtrl(p)",
			"\t\t${5:bt1} = Button(p, -1, '${6:label}')",
			"\t\t${5:bt1}.Bind(EVT_BUTTON, self.accion)",
			"\t\ts.Add(${2:st1}, 0, ALL|EXPAND, 10)",
			"\t\ts.Add(${4:tc1}, 0, ALL|EXPAND, 10)",
			"\t\ts.Add(${5:bt1}, 0, ALL|EXPAND, 10)",
			"\t\t$7",
			"\t\tp.SetSizer(s)",
			"\t\tf.Show()",
			"\t\treturn True",
			"",
			"\tdef accion(self, event):",
			"\t\tprint('${6:label}')",
			"",
			"",
			"app = MyApp()",
			"app.MainLoop()",
			""
		]
	},
	"choices": {
		"prefix": "foo",
		"body": [
			"${1|Choice1,Choice2,Choice3|}"
		],
		"description": "choices"
	},
	"printv": {
		"prefix": ".pv",
		"body": [
			"print(f'######## {$1=} #########')"
		],
		"description": "printv"
	},
	"constructorK": {
		"prefix": "defi",
		"body": [
			"def __init__(self, ${1:param1}, ${2:param2}, ${3:param3}, ${4:param4}):",
			"\tself.${1:param1} = ${1:param1}",
			"\tself.${2:param2} = ${2:param2}",
			"\tself.${3:param3} = ${3:param3}",
			"\tself.${4:param4} = ${4:param4}",
		],
		"description": "constructor"
	},
	"name main": {
		"prefix": "ifn",
		"body": [
			"def main():",
			"\t${1:pass}",
			"",
			"if __name__ == '__main__':",
			"\tmain()"
		],
		"description": "name main"
	}
}